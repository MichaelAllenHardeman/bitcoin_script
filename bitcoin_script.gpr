project Bitcoin_Script is

  -----------
  -- Types --
  -----------
  type Word_Size_Option is ("32",   "64");
  type System_Option    is ("unix", "windows");
  type Boolean_Option   is ("Yes",  "No");

  -------------
  -- Options --
  -------------
  Word_Size : Word_Size_Option := external ("Word_Size", "32");
  System    : System_Option    := external ("System",    "windows");
  Debug     : Boolean_Option   := external ("Debug",     "Yes");

  ---------------
  -- Variables --
  ---------------
  Library_Directory := "binaries/" & System & "/" & Word_Size;

  --------------
  -- Settings --
  --------------
  for Languages    use ("Ada");
  for Library_Name use "BitcoinScript";
  for Library_Dir  use Library_Directory;
  for Source_Dirs  use ("code");
  for Object_Dir   use "objects";

  -------------
  -- Builder --
  -------------
  package Builder is
    Switch_Builder := ("-E"); -- Store traceback in exceptions
    case Word_Size is
      when "32" => null;
      when "64" => Switch_Builder := Switch_Builder & ("-m64"); -- Pass onto gcc ld.exe produce only 64 bit code
    end case;
    for Default_Switches ("Ada") use Switch_Builder;
  end Builder;

  --------------
  -- Compiler --
  --------------
  package Compiler is
    Switch_Compiler := ("-gnatW8",    -- Wide character encoding method (?=h/u/s/e/8/b)
                        "-gnat2012"); -- Ada 2012 mode (default)
    case Debug is
      when "No"  => Switch_Compiler := Switch_Compiler & ("-O3",     -- Maximum Optimization
                                                          "-gnatp"); -- Surpress all checks
      when "Yes" => Switch_Compiler := Switch_Compiler & ("-O0",     -- Minimize Optimization
                                                          "-g",      -- Generate debugging information
                                                          "-gnata",  -- Assertions enabled. Pragma Assert/Debug to be activated
                                                          "-gnatE",  -- Generate extra information in exception messages
                                                          "-gnatf",  -- Full errors. Verbose details, all undefined references
                                                          "-gnato"); -- Enable overflow checking for numerics
    end case;
    for Default_Switches ("Ada") use Switch_Compiler;
  end Compiler;

end Bitcoin_Script;

